diff -r 164a57c0cdf0 browser/components/newtab/lib/ActivityStream.jsm
--- a/browser/components/newtab/lib/ActivityStream.jsm	Thu Mar 14 19:46:30 2019 +0200
+++ b/browser/components/newtab/lib/ActivityStream.jsm	Wed Mar 20 08:59:37 2019 -0700
@@ -21,15 +21,10 @@
 const {PlacesFeed} = ChromeUtils.import("resource://activity-stream/lib/PlacesFeed.jsm", {});
 const {PrefsFeed} = ChromeUtils.import("resource://activity-stream/lib/PrefsFeed.jsm", {});
 const {Store} = ChromeUtils.import("resource://activity-stream/lib/Store.jsm", {});
-const {SnippetsFeed} = ChromeUtils.import("resource://activity-stream/lib/SnippetsFeed.jsm", {});
 const {SystemTickFeed} = ChromeUtils.import("resource://activity-stream/lib/SystemTickFeed.jsm", {});
-const {TelemetryFeed} = ChromeUtils.import("resource://activity-stream/lib/TelemetryFeed.jsm", {});
 const {FaviconFeed} = ChromeUtils.import("resource://activity-stream/lib/FaviconFeed.jsm", {});
 const {TopSitesFeed} = ChromeUtils.import("resource://activity-stream/lib/TopSitesFeed.jsm", {});
-const {TopStoriesFeed} = ChromeUtils.import("resource://activity-stream/lib/TopStoriesFeed.jsm", {});
-const {HighlightsFeed} = ChromeUtils.import("resource://activity-stream/lib/HighlightsFeed.jsm", {});
 const {ASRouterFeed} = ChromeUtils.import("resource://activity-stream/lib/ASRouterFeed.jsm", {});
-const {DiscoveryStreamFeed} = ChromeUtils.import("resource://activity-stream/lib/DiscoveryStreamFeed.jsm", {});
 
 const DEFAULT_SITES = new Map([
   // This first item is the global list fallback for any unexpected geos
@@ -48,7 +43,7 @@
 
 // Determine if spocs should be shown for a geo/locale
 function showSpocs({geo}) {
-  return SPOCS_GEOS.includes(geo);
+  return false;
 }
 
 // Configure default Activity Stream prefs with a plain `value` or a `getValue`
@@ -79,7 +74,7 @@
   }],
   ["showSponsored", {
     title: "Show sponsored cards in spoc experiment (show_spocs in topstories.options has to be set to true as well)",
-    value: true,
+    value: false,
   }],
   ["pocketCta", {
     title: "Pocket cta and button for logged out users.",
@@ -116,20 +111,20 @@
   }],
   ["disableSnippets", {
     title: "Disable snippets on activity stream",
-    value: false,
+    value: true,
   }],
   ["topSitesRows", {
     title: "Number of rows of Top Sites to display",
-    value: 1,
+    value: 2,
   }],
   ["telemetry", {
     title: "Enable system error and usage data collection",
-    value: true,
+    value: false,
     value_local_dev: false,
   }],
   ["telemetry.ut.events", {
     title: "Enable Unified Telemetry event data collection",
-    value: AppConstants.EARLY_BETA_OR_EARLIER,
+    value: false,
     value_local_dev: false,
   }],
   ["telemetry.ping.endpoint", {
@@ -146,7 +141,7 @@
   }],
   ["section.highlights.includePocket", {
     title: "Boolean flag that decides whether or not to show saved Pocket stories in highlights.",
-    value: true,
+    value: false,
   }],
   ["section.highlights.includeDownloads", {
     title: "Boolean flag that decides whether or not to show saved recent Downloads in highlights.",
@@ -162,7 +157,7 @@
   }],
   ["sectionOrder", {
     title: "The rendering order for the sections",
-    value: "topsites,topstories,highlights",
+    value: "topsites",
   }],
   ["improvesearch.noDefaultSearchTile", {
     title: "Experiment to remove tiles that are the same as the default search",
@@ -218,7 +213,7 @@
     value: JSON.stringify({
       api_key_pref: "extensions.pocket.oAuthConsumerKey",
       enabled: false,
-      show_spocs: true,
+      show_spocs: false,
       // This is currently an exmple layout used for dev purposes.
       layout_endpoint: "https://getpocket.com/v3/newtab/layout?version=1&consumer_key=$apiKey&layout_variant=basic",
     }),
@@ -267,7 +262,7 @@
     name: "section.highlights",
     factory: () => new HighlightsFeed(),
     title: "Fetches content recommendations from places db",
-    value: true,
+    value: false,
   },
   {
     name: "section.topstories",
@@ -280,14 +275,14 @@
         "CA": ["en-CA", "en-GB", "en-US", "en-ZA"],
         "DE": ["de", "de-DE", "de-AT", "de-CH"],
       })[geo];
-      return !!locales && locales.includes(locale);
+      return false;
     },
   },
   {
     name: "snippets",
     factory: () => new SnippetsFeed(),
     title: "Gets snippets data",
-    value: true,
+    value: false,
   },
   {
     name: "systemtick",
@@ -299,7 +294,7 @@
     name: "telemetry",
     factory: () => new TelemetryFeed(),
     title: "Relays telemetry-related actions to PingCentre",
-    value: true,
+    value: false,
   },
   {
     name: "favicon",
@@ -323,7 +318,7 @@
     name: "discoverystreamfeed",
     factory: () => new DiscoveryStreamFeed(),
     title: "Handles new pocket ui for the new tab page",
-    value: true,
+    value: false,
   },
 ];
