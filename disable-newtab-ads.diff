--- a/browser/components/newtab/lib/ActivityStream.jsm.orig     2020-01-03 18:57:44.000000000 +0000
+++ b/browser/components/newtab/lib/ActivityStream.jsm  2020-01-06 19:51:54.399944002 +0000
@@ -58,11 +58,6 @@
 );
 ChromeUtils.defineModuleGetter(
   this,
-  "TelemetryFeed",
-  "resource://activity-stream/lib/TelemetryFeed.jsm"
-);
-ChromeUtils.defineModuleGetter(
-  this,
   "FaviconFeed",
   "resource://activity-stream/lib/FaviconFeed.jsm"
 );
@@ -73,24 +68,9 @@
 );
 ChromeUtils.defineModuleGetter(
   this,
-  "TopStoriesFeed",
-  "resource://activity-stream/lib/TopStoriesFeed.jsm"
-);
-ChromeUtils.defineModuleGetter(
-  this,
-  "HighlightsFeed",
-  "resource://activity-stream/lib/HighlightsFeed.jsm"
-);
-ChromeUtils.defineModuleGetter(
-  this,
   "ASRouterFeed",
   "resource://activity-stream/lib/ASRouterFeed.jsm"
 );
-ChromeUtils.defineModuleGetter(
-  this,
-  "DiscoveryStreamFeed",
-  "resource://activity-stream/lib/DiscoveryStreamFeed.jsm"
-);
 
 const DEFAULT_SITES = new Map([
   // This first item is the global list fallback for any unexpected geos
@@ -132,7 +112,7 @@
 
 // Determine if spocs should be shown for a geo/locale
 function showSpocs({ geo }) {
-  return SPOCS_GEOS.includes(geo);
+  return false;
 }
 
 // Configure default Activity Stream prefs with a plain `value` or a `getValue`
@@ -148,110 +128,11 @@
     },
   ],
   [
-    "feeds.section.topstories.options",
-    {
-      title: "Configuration options for top stories feed",
-      // This is a dynamic pref as it depends on the feed being shown or not
-      getValue: args =>
-        JSON.stringify({
-          api_key_pref: "extensions.pocket.oAuthConsumerKey",
-          // Use the opposite value as what default value the feed would have used
-          hidden: !PREFS_CONFIG.get("feeds.section.topstories").getValue(args),
-          provider_icon: "pocket",
-          provider_name: "Pocket",
-          read_more_endpoint:
-            "https://getpocket.com/explore/trending?src=fx_new_tab",
-          stories_endpoint: `https://getpocket.cdn.mozilla.net/v3/firefox/global-recs?version=3&consumer_key=$apiKey&locale_lang=${
-            args.locale
-          }&feed_variant=${
-            showSpocs(args) ? "default_spocs_on" : "default_spocs_off"
-          }`,
-          stories_referrer: "https://getpocket.com/recommendations",
-          topics_endpoint: `https://getpocket.cdn.mozilla.net/v3/firefox/trending-topics?version=2&consumer_key=$apiKey&locale_lang=${
-            args.locale
-          }`,
-          model_keys: [
-            "nmf_model_animals",
-            "nmf_model_business",
-            "nmf_model_career",
-            "nmf_model_datascience",
-            "nmf_model_design",
-            "nmf_model_education",
-            "nmf_model_entertainment",
-            "nmf_model_environment",
-            "nmf_model_fashion",
-            "nmf_model_finance",
-            "nmf_model_food",
-            "nmf_model_health",
-            "nmf_model_home",
-            "nmf_model_life",
-            "nmf_model_marketing",
-            "nmf_model_politics",
-            "nmf_model_programming",
-            "nmf_model_science",
-            "nmf_model_shopping",
-            "nmf_model_sports",
-            "nmf_model_tech",
-            "nmf_model_travel",
-            "nb_model_animals",
-            "nb_model_books",
-            "nb_model_business",
-            "nb_model_career",
-            "nb_model_datascience",
-            "nb_model_design",
-            "nb_model_economics",
-            "nb_model_education",
-            "nb_model_entertainment",
-            "nb_model_environment",
-            "nb_model_fashion",
-            "nb_model_finance",
-            "nb_model_food",
-            "nb_model_game",
-            "nb_model_health",
-            "nb_model_history",
-            "nb_model_home",
-            "nb_model_life",
-            "nb_model_marketing",
-            "nb_model_military",
-            "nb_model_philosophy",
-            "nb_model_photography",
-            "nb_model_politics",
-            "nb_model_productivity",
-            "nb_model_programming",
-            "nb_model_psychology",
-            "nb_model_science",
-            "nb_model_shopping",
-            "nb_model_society",
-            "nb_model_space",
-            "nb_model_sports",
-            "nb_model_tech",
-            "nb_model_travel",
-            "nb_model_writing",
-          ],
-          show_spocs: showSpocs(args),
-          personalized: true,
-          version: 1,
-        }),
-    },
-  ],
-  [
     "showSponsored",
     {
       title:
         "Show sponsored cards in spoc experiment (show_spocs in topstories.options has to be set to true as well)",
-      value: true,
-    },
-  ],
-  [
-    "pocketCta",
-    {
-      title: "Pocket cta and button for logged out users.",
-      value: JSON.stringify({
-        cta_button: "",
-        cta_text: "",
-        cta_url: "",
-        use_cta: false,
-      }),
+      value: false,
     },
   ],
   [
@@ -272,21 +153,21 @@
     "feeds.snippets",
     {
       title: "Show snippets on activity stream",
-      value: true,
+      value: false,
     },
   ],
   [
     "topSitesRows",
     {
       title: "Number of rows of Top Sites to display",
-      value: 1,
+      value: 2,
     },
   ],
   [
     "telemetry",
     {
       title: "Enable system error and usage data collection",
-      value: true,
+      value: false,
       value_local_dev: false,
     },
   ],
@@ -294,26 +175,11 @@
     "telemetry.ut.events",
     {
       title: "Enable Unified Telemetry event data collection",
-      value: AppConstants.EARLY_BETA_OR_EARLIER,
-      value_local_dev: false,
-    },
-  ],
-  [
-    "telemetry.structuredIngestion",
-    {
-      title: "Enable Structured Ingestion Telemetry data collection",
-      value: true,
+      value: false,
       value_local_dev: false,
     },
   ],
   [
-    "telemetry.structuredIngestion.endpoint",
-    {
-      title: "Structured Ingestion telemetry server endpoint",
-      value: "https://incoming.telemetry.mozilla.org/submit",
-    },
-  ],
-  [
     "section.highlights.includeVisited",
     {
       title:
@@ -334,7 +200,7 @@
     {
       title:
         "Boolean flag that decides whether or not to show saved Pocket stories in highlights.",
-      value: true,
+      value: false,
     },
   ],
   [
@@ -363,7 +229,7 @@
     "sectionOrder",
     {
       title: "The rendering order for the sections",
-      value: "topsites,topstories,highlights",
+      value: "topsites",
     },
   ],
   [
@@ -454,86 +320,6 @@
       }),
     },
   ],
-  // See browser/app/profile/firefox.js for other ASR preferences. They must be defined there to enable roll-outs.
-  [
-    "discoverystream.flight.blocks",
-    {
-      title: "Track flight blocks",
-      skipBroadcast: true,
-      value: "{}",
-    },
-  ],
-  [
-    "discoverystream.config",
-    {
-      title: "Configuration for the new pocket new tab",
-      getValue: ({ geo, locale }) => {
-        // PLEASE NOTE:
-        // hardcoded_layout in `lib/DiscoveryStreamFeed.jsm` only works for en-* and DE and requires refactoring for other locales
-        const dsEnablementMatrix = {
-          US: ["en-CA", "en-GB", "en-US"],
-          CA: ["en-CA", "en-GB", "en-US"],
-          DE: ["de", "de-DE", "de-AT", "de-CH"],
-        };
-
-        // Verify that the current geo & locale combination is enabled
-        const isEnabled =
-          !!dsEnablementMatrix[geo] && dsEnablementMatrix[geo].includes(locale);
-
-        return JSON.stringify({
-          api_key_pref: "extensions.pocket.oAuthConsumerKey",
-          collapsible: true,
-          enabled: isEnabled,
-          show_spocs: showSpocs({ geo }),
-          hardcoded_layout: true,
-          personalized: true,
-          // This is currently an exmple layout used for dev purposes.
-          layout_endpoint:
-            "https://getpocket.cdn.mozilla.net/v3/newtab/layout?version=1&consumer_key=$apiKey&layout_variant=basic",
-        });
-      },
-    },
-  ],
-  [
-    "discoverystream.endpoints",
-    {
-      title:
-        "Endpoint prefixes (comma-separated) that are allowed to be requested",
-      value: "https://getpocket.cdn.mozilla.net/,https://spocs.getpocket.com/",
-    },
-  ],
-  [
-    "discoverystream.engagementLabelEnabled",
-    {
-      title:
-        "Allow the display of engagement labels for discovery stream components (eg: Trending, Popular, etc)",
-      value: false,
-    },
-  ],
-  [
-    "discoverystream.spoc.impressions",
-    {
-      title: "Track spoc impressions",
-      skipBroadcast: true,
-      value: "{}",
-    },
-  ],
-  [
-    "discoverystream.endpointSpocsClear",
-    {
-      title:
-        "Endpoint for when a user opts-out of sponsored content to delete the user's data from the ad server.",
-      value: "https://spocs.getpocket.com/user",
-    },
-  ],
-  [
-    "discoverystream.rec.impressions",
-    {
-      title: "Track rec impressions",
-      skipBroadcast: true,
-      value: "{}",
-    },
-  ],
 ]);
 
 // Array of each feed's FEEDS_CONFIG factory and values to add to PREFS_CONFIG
@@ -572,23 +358,7 @@
     name: "section.highlights",
     factory: () => new HighlightsFeed(),
     title: "Fetches content recommendations from places db",
-    value: true,
-  },
-  {
-    name: "section.topstories",
-    factory: () =>
-      new TopStoriesFeed(PREFS_CONFIG.get("discoverystream.config")),
-    title:
-      "Fetches content recommendations from a configurable content provider",
-    // Dynamically determine if Pocket should be shown for a geo / locale
-    getValue: ({ geo, locale }) => {
-      const locales = {
-        US: ["en-CA", "en-GB", "en-US", "en-ZA"],
-        CA: ["en-CA", "en-GB", "en-US", "en-ZA"],
-        DE: ["de", "de-DE", "de-AT", "de-CH"],
-      }[geo];
-      return !!locales && locales.includes(locale);
-    },
+    value: false,
   },
   {
     name: "systemtick",
@@ -600,7 +370,7 @@
     name: "telemetry",
     factory: () => new TelemetryFeed(),
     title: "Relays telemetry-related actions to PingCentre",
-    value: true,
+    value: false,
   },
   {
     name: "favicon",
@@ -620,12 +390,6 @@
     title: "Handles AS Router messages, such as snippets and onboaridng",
     value: true,
   },
-  {
-    name: "discoverystreamfeed",
-    factory: () => new DiscoveryStreamFeed(),
-    title: "Handles new pocket ui for the new tab page",
-    value: true,
-  },
 ];
 
 const FEEDS_CONFIG = new Map();

